// Câ€™est le chef dâ€™orchestre des routes.
// Il dÃ©finit Â«â€¯quand je tape telle URL, jâ€™affiche telle pageâ€¯Â».
// Il utilise la magie de React Router pour Ã§a.

import { BrowserRouter, Routes, Route } from "react-router-dom";
// On importe les outils principaux de React Router :
// BrowserRouter : le conteneur gÃ©nÃ©ral qui Ã©coute les changements dâ€™URL.
// Routes : le groupe de routes.
// Route : une route individuelle.

// ðŸ“Œ On importe nos pages
import Layout from "./Layout/Layout";
import Home from '../pages/Home/Home';
import About from "../pages/About/About";
import HousingPage from "../pages/HousingPage/HousingPage";
import NotFound from "../pages/NotFound/NotFound";

function AppRouter() { // On crÃ©e un composant React qui retourne la logique du router.
    return (
        // Le conteneur gÃ©nÃ©ral.<BrowserRouter>
        // âž¡ Il Ã©coute lâ€™URL dans le navigateur.
        // âž¡ Il garde la page en place quand tu changes de route.
        <BrowserRouter>
        {/* Le groupe de toutes tes routes.
        âž¡ Ã€ lâ€™intÃ©rieur, tu mets un <Route /> pour chaque page. */}
            <Routes>
                <Route path="/" element={<Layout />}>
                    {/* âž¡ Quand on tape / dans lâ€™URL, il affiche le composant Home. */}
                    <Route index element={<Home />} />
                    {/* âž¡ Quand on tape /about, il affiche le composant About. */}
                    <Route path="about" element={<About />} />
                    {/* âž¡ Pour la page des logements avec un identifiant dynamique (/housing/123 par exemple), il affiche HousingPage.
                    Le :id est une variable que tu pourras lire avec useParams(). */}
                    <Route path="/housing/:id" element={<HousingPage/>}/>
                    {/* âž¡ Le joker * : si lâ€™URL ne correspond Ã  aucune des routes ciâ€‘dessus, il affiche la page NotFound (404). */}
                    <Route path="*" element={<NotFound/>}/>
                </Route>
            </Routes>
        </BrowserRouter>
    );
}

export default AppRouter